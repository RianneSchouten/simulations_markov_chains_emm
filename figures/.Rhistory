library(ggplot2)
library(readxl)
library(tidyverse)
library(RColorBrewer)
library(mice)
setwd("C:/Users/20200059/Documents/Github/simulations_beam_search_markov_chain/figures/")
### Second type of simulations
# first set with start at order = 4 and multiple orders on 13-11
data <- read_excel("../data_output/experiment_higherorders_20201113_25nreps_[100]_[50, 25, 10]_[10, 5]_[20, 10, 5].xlsx")
### Second type of simulations
# first set with start at order = 4 and multiple orders on 13-11
data <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201113_25nreps_[100]_[50, 25, 10]_[10, 5]_[20, 10, 5].xlsx")
# at 11 11, order 0 and 1 with start at order = 1
#data <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201111_25nreps_[100]_[2, 5, 25]_[2, 5, 25]_[2, 5, 25].xlsx")
# here, we compare with the complement and find out we should increase the dimensions
#data <- read_excel("../data_output/experiment_higherorders_20201117_10nreps_[100, 500]_[50, 200]_[2, 5, 10]_[20].xlsx")
# we add a setting for states = 2 to the experiment at 13 11
data2 <- read_excel("../data_output/experiment_higherorders_20201118_25nreps_[100]_[50, 25, 10]_[2]_[20, 10, 5].xlsx")
# at 11 11, order 0 and 1 with start at order = 1
#data <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201111_25nreps_[100]_[2, 5, 25]_[2, 5, 25]_[2, 5, 25].xlsx")
# here, we compare with the complement and find out we should increase the dimensions
#data <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201117_10nreps_[100, 500]_[50, 200]_[2, 5, 10]_[20].xlsx")
# we add a setting for states = 2 to the experiment at 13 11
data2 <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201118_25nreps_[100]_[50, 25, 10]_[2]_[20, 10, 5].xlsx")
# we add a setting for times = 200 to the experiment at 13 11
data3 <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201118_10nreps_[100]_[200]_[10, 5, 2]_[20, 10, 5].xlsx")
# we repeat phi aicc for 200 because we find that there is a problem when we restructured the code at 18 11
data_phiaicc_200 <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201123_10nreps_[100]_[200]_[10, 5, 2]_[20, 10, 5].xlsx")
# we run omegatv again to be sure about the output
data_omegatv <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201124_10nreps_[100]_[200, 50, 10]_[10, 5, 2]_[20, 10, 5].xlsx")
# we run phiwd again to be sure about the output
data_phiwd <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201125_10nreps_[100]_[200, 50, 10]_[10, 5, 2]_[20, 10, 5].xlsx")
# we find a mistake in phiwrl and repeat those simulations
data_phiwrl <- read_excel("../data_output/results first paper draft/experiment_higherorders_20201126_10nreps_[100]_[200, 50, 10]_[10, 5, 2]_[20, 10, 5].xlsx")
data2 <- data2[, c(1:6, 8:20)]
data3 <- data3[, c(1:6, 8:20)]
data_phiaicc_200 <- data_phiaicc_200[, c(1:6, 8:10)]
data_omegatv <- data_omegatv[, c(1:6, 8:10)]
data_phiwd <- data_phiwd[, c(1:6, 8:10)]
data_phiwrl <- data_phiwrl[, c(1:6, 8:10)]
# process data 1
data1 <- data %>%
filter(T != 25) %>%
filter(subgroup_orders != 0) %>%
select(-omegatv_order) %>%
select(-omegatv_rank) %>%
select(-phiwd_rank) %>%
select(-phiwd_order)  %>%
select(-phiwarl_rank) %>%
select(-phiwarl_order)
length_new_column1 = 3 * 4 * 25 * 1 * 2 * 2 * 3
long_data1 <- data1 %>%
pivot_longer(
cols = names(data1)[8:dim(data1)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column1)) %>%
mutate(measure = gsub("_.*", "", measure))
# process data 2
data2 <- data2 %>%
filter(T != 25) %>%
filter(subgroup_orders != 0) %>%
select(-omegatv_order) %>%
select(-omegatv_rank) %>%
select(-phiwd_rank) %>%
select(-phiwd_order)  %>%
select(-phiwarl_rank) %>%
select(-phiwarl_order)
length_new_column2 = 3 * 4 * 25 * 1 * 2 * 1 * 3
long_data2 <- data2 %>%
pivot_longer(
cols = names(data2)[8:dim(data1)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column2)) %>%
mutate(measure = gsub("_.*", "", measure))
# add timepoints 200
# process data 3
data3 <- data3 %>%
select(-phiaicc_order) %>%
select(-phiaicc_rank) %>%
select(-omegatv_order) %>%
select(-omegatv_rank) %>%
filter(subgroup_orders != 0) %>%
select(-phiwd_rank) %>%
select(-phiwd_order)  %>%
select(-phiwarl_rank) %>%
select(-phiwarl_order)
length_new_column3 = 2 * 4 * 10 * 1 * 1 * 3 * 3
long_data3 <- data3 %>%
pivot_longer(
cols = names(data3)[8:dim(data3)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column3)) %>%
mutate(measure = gsub("_.*", "", measure))
# process data 4
length_new_column4 = 1 * 4 * 10 * 1 * 1 * 3 * 3
long_data4 <- data_phiaicc_200 %>%
pivot_longer(
cols = names(data_phiaicc_200)[8:dim(data_phiaicc_200)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column4)) %>%
mutate(measure = gsub("_.*", "", measure))
# repeat all of it for omegatv
# process data 5
length_new_column5 = 1 * 4 * 10 * 1 * 3 * 3 * 3
long_data5 <- data_omegatv %>%
pivot_longer(
cols = names(data_omegatv)[8:dim(data_omegatv)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column5)) %>%
mutate(measure = gsub("_.*", "", measure))
# repeat all of it for phiwd
# process data 6
length_new_column6 = 1 * 4 * 10 * 1 * 3 * 3 * 3
long_data6 <- data_phiwd %>%
pivot_longer(
cols = names(data_phiwd)[8:dim(data_phiwd)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column6)) %>%
mutate(measure = gsub("_.*", "", measure))
# repeat all of it for phiwrl
# process data 7
length_new_column7 = 1 * 4 * 10 * 1 * 3 * 3 * 3
long_data7 <- data_phiwrl %>%
pivot_longer(
cols = names(data_phiwrl)[8:dim(data_phiwrl)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order'), length_new_column7)) %>%
mutate(measure = gsub("_.*", "", measure))
long_data <- rbind(long_data1, long_data2, long_data3, long_data4, long_data5,
long_data6, long_data7) %>%
mutate(value = case_when(
value == 0 & type == 'order' ~ 1, # we stop now at order = 1
TRUE ~ value)) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
