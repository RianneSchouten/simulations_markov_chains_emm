data_long %>%
group_by(student) %>%
mutate(mean_gpa = mean(gpa)) %>%
mutate(var_gpa = var(gpa)) %>%
mutate(range_gpa = range(gpa))
data_long$gpa
range(data_long$gpa)
?summarise
data_long %>%
group_by(student) %>%
mutate(mean_gpa = mean(gpa)) %>%
mutate(var_gpa = var(gpa)) %>%
mutate(range_gpa = IQR(gpa))
# add new variables
data_long_adds <- data_long %>%
group_by(student) %>%
mutate(mean_gpa = mean(gpa)) %>%
mutate(var_gpa = var(gpa)) %>%
mutate(range_gpa = IQR(gpa)) %>%
mutate(mean_job = mean(job)) %>%
mutate(var_job = var(job)) %>%
mutate(range_job = IQR(job)) %>%
ungroup() %>%
select(c(student, mean_gpa, var_gpa, range_gpa, mean_job, var_job, range_job)) %>% # needed to bring back to wide format
distinct_all() # needed to bring back to wide format
head(data_long_adds)
# change back to wide format
head(data_wide)
data_transformed <- left_join(data_wide, data_long_adds, by = c("student"))
head(data_transformed)
# add new variables
data_long_adds <- data_long %>%
group_by(student) %>%
mutate(mean_gpa = mean(gpa)) %>%
mutate(var_gpa = var(gpa)) %>%
mutate(iqr_gpa = IQR(gpa)) %>%
mutate(mean_job = mean(job)) %>%
mutate(var_job = var(job)) %>%
mutate(iqr_job = IQR(job)) %>%
ungroup() %>%
select(c(student, mean_gpa, var_gpa, iqr_gpa, mean_job, var_job, iqr_job)) %>% # needed to bring back to wide format
distinct_all() # needed to bring back to wide format
head(data_long_adds)
# change back to wide format
head(data_wide)
data_transformed <- left_join(data_wide, data_long_adds, by = c("student"))
head(data_transformed)
write.csv(data_transformed, "gpa_tr.csv")
data_wide <- cc(data) %>%
mutate(job1 = as.numeric(gsub('[A-z ]*', '' , job1)))
head(data_wide)
?lookup
data_wide <- cc(data) %>%
mutate(job1 = as.numeric(gsub('[A-z ]*', '' , job1))) %>%
mutate(job2 = as.numeric(gsub('[A-z ]*', '' , job2))) %>%
mutate(job3 = as.numeric(gsub('[A-z ]*', '' , job3))) %>%
mutate(job4 = as.numeric(gsub('[A-z ]*', '' , job4))) %>%
mutate(job5 = as.numeric(gsub('[A-z ]*', '' , job5))) %>%
mutate(job6 = as.numeric(gsub('[A-z ]*', '' , job6))) %>%
mutate(sex = c("female" = 1, "male" = 0))
data_wide <- cc(data) %>%
mutate(job1 = as.numeric(gsub('[A-z ]*', '' , job1))) %>%
mutate(job2 = as.numeric(gsub('[A-z ]*', '' , job2))) %>%
mutate(job3 = as.numeric(gsub('[A-z ]*', '' , job3))) %>%
mutate(job4 = as.numeric(gsub('[A-z ]*', '' , job4))) %>%
mutate(job5 = as.numeric(gsub('[A-z ]*', '' , job5))) %>%
mutate(job6 = as.numeric(gsub('[A-z ]*', '' , job6))) %>%
mutate(sex = recode(sex, "female" = 1, "male" = 0))
head(data_wide)
data_wide <- cc(data) %>%
mutate(job1 = as.numeric(gsub('[A-z ]*', '' , job1))) %>%
mutate(job2 = as.numeric(gsub('[A-z ]*', '' , job2))) %>%
mutate(job3 = as.numeric(gsub('[A-z ]*', '' , job3))) %>%
mutate(job4 = as.numeric(gsub('[A-z ]*', '' , job4))) %>%
mutate(job5 = as.numeric(gsub('[A-z ]*', '' , job5))) %>%
mutate(job6 = as.numeric(gsub('[A-z ]*', '' , job6))) %>%
mutate(sex = recode(sex, "female" = 1, "male" = 0)) %>%
mutate(admitted = recode(admitted, "yes" = 1, "no" = 0))
head(data_wide)
# in wide format, you can just see every measurement moment as a separate variable.
# but it will give you a lot of parameters.
# in long format you cannot.
glm(admitted ~ ., data = data_wide, family = "binomial")
# change to long format
data_long <- data_wide %>%
select(-c(job1, job2, job3, job4, job5, job6)) %>%
pivot_longer(c(gpa1:gpa6), names_to = "semester", names_prefix = "gpa", values_to = "gpa") %>%
mutate(job = pivot_longer(select(data_wide, c(job1, job2, job3, job4, job5, job6)),
c(job1:job6), values_to = "job")$job)
head(data_long)
# add new variables
data_long_adds <- data_long %>%
group_by(student) %>%
mutate(mean_gpa = mean(gpa)) %>%
mutate(var_gpa = var(gpa)) %>%
mutate(iqr_gpa = IQR(gpa)) %>%
mutate(mean_job = mean(job)) %>%
mutate(var_job = var(job)) %>%
mutate(iqr_job = IQR(job)) %>%
ungroup() %>%
select(c(student, mean_gpa, var_gpa, iqr_gpa, mean_job, var_job, iqr_job)) %>% # needed to bring back to wide format
distinct_all() # needed to bring back to wide format
head(data_long_adds)
# change back to wide format
head(data_wide)
data_transformed <- left_join(data_wide, data_long_adds, by = c("student"))
head(data_transformed)
write.csv(data_transformed, "gpa-tr.csv")
?write.csv
write.csv(data_transformed, "gpa-tr.csv", row.names = FALSE)
library(foreign)
library(lme4)
library(mice)
library(dplyr)
library(tidyr)
library(stringr)
time_in_patients <- read.spss('Epilepsy.sav', to.data.frame = TRUE)
### dataset epilepsy
data <- time_in_patients
head(data)
0/3
library(ggplot2)
library(readxl)
library(tidyverse)
library(RColorBrewer)
library(mice)
library(xtable)
setwd("C:/Users/20200059/Documents/Github/simulations_beam_search_markov_chain/figures/")
data <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_check.xlsx")
length_new_column <- 6 * 1 * 10 * 3 * 3 * 3 * 3
data <- data %>%
pivot_longer(
cols = names(data)[9:dim(data)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure))
head(data)
data <- data %>%
pivot_longer(
cols = names(data)[12:dim(data)[2]], #9
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure))
long_data <- data %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
plot_data <- long_data %>%
filter(states == 5)
ranks <- plot_data %>%
filter(type == 'rank') %>%
filter(measure == 'phiaic' | measure == 'phiwrl') %>%
mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc, phiwd")) %>%
ggplot(aes(y = value, x = N)) +
geom_boxplot(aes(fill = ncovs), outlier.shape = NA) +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Boxplots of the rank of the true subgroup in the top-20',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Rank') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
ranks
ranks <- plot_data %>%
filter(type == 'rank') %>%
#filter(measure == 'phiaic' | measure == 'phiwrl') %>%
#mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc, phiwd")) %>%
ggplot(aes(y = value, x = N)) +
geom_boxplot(aes(fill = ncovs), outlier.shape = NA) +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Boxplots of the rank of the true subgroup in the top-20',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Rank') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
ranks
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_12 <- read_excel("../data_output/results_manuscript/experiment_zero_order_subgroups_20210112_10nreps_[100, 500, 1000]_[10, 5, 2]_[10, 5, 2]_[20, 10, 5].xlsx")
# name is too long, but we have to load this dataset
#data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515.xlsx")
long_data <- rbind(data12, data15) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
long_data <- rbind(data_12, data_15) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
head(data15)
head(data_15)
# name is too long, but we have to load this dataset
#data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515.xlsx")
data_15 <- data_15 %>%
pivot_longer(
cols = names(data_15)[12:dim(data_15)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(true_desc_length, global_model_order, start_at_order))
head(data_15)
data_12 <- read_excel("../data_output/results_manuscript/experiment_zero_order_subgroups_20210112_10nreps_[100, 500, 1000]_[10, 5, 2]_[10, 5, 2]_[20, 10, 5].xlsx")
# name is too long, but we have to load this dataset
#data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515.xlsx")
length_new_column <- 6 * 1 * 10 * 3 * 3 * 3 * 3
data_12 <- data_12 %>%
pivot_longer(
cols = names(data_12)[9:dim(data_12)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure))
data_15 <- data_15 %>%
pivot_longer(
cols = names(data_15)[12:dim(data_15)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(true_desc_length, global_model_order, start_at_order))
long_data <- rbind(data_12, data_15) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
head(data_12)
head(data_15)
data_12 <- read_excel("../data_output/results_manuscript/experiment_zero_order_subgroups_20210112_10nreps_[100, 500, 1000]_[10, 5, 2]_[10, 5, 2]_[20, 10, 5].xlsx")
# name is too long, but we have to load this dataset
#data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515.xlsx")
length_new_column <- 6 * 1 * 10 * 3 * 3 * 3 * 3
data_12 <- data_12 %>%
pivot_longer(
cols = names(data_12)[9:dim(data_12)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(refs))
data_15 <- data_15 %>%
pivot_longer(
cols = names(data_15)[12:dim(data_15)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(true_desc_length, global_model_order, start_at_order, p))
long_data <- rbind(data_12, data_15) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
plot_data <- long_data %>%
filter(states == 5)
ranks <- plot_data %>%
filter(type == 'rank') %>%
#filter(measure == 'phiaic' | measure == 'phiwrl') %>%
#mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc, phiwd")) %>%
ggplot(aes(y = value, x = N)) +
geom_boxplot(aes(fill = ncovs), outlier.shape = NA) +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Boxplots of the rank of the true subgroup in the top-20',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Rank') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
ranks
ranks <- plot_data %>%
filter(type == 'rank') %>%
filter(measure == 'phiaic' | measure == 'phiwrl') %>%
mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc, phiwd")) %>%
ggplot(aes(y = value, x = N)) +
geom_boxplot(aes(fill = ncovs), outlier.shape = NA) +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Boxplots of the rank of the true subgroup in the top-20',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Rank') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
ranks
name <- paste('../figures/Figures_revised_manuscript/ranks_exceptional_starting_behaviour.eps', sep = "", collapse = NULL)
ggsave(name, width = 20, height = 16, units = "cm")
orders <- plot_data %>%
filter(type == 'order') %>%
filter(measure != 'phiwrl') %>%
filter(measure != 'omegatv') %>%
filter(measure == 'phiaic' | measure == 'phiwd') %>%
mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc")) %>%
group_by(N, measure, true_subgroup_order, timepoints, states, ncovs) %>%
summarize(perc_true_order =
100 * sum(subgroup_orders ==
value, na.rm = TRUE) / 10) %>%
ggplot(aes(x = N, y = perc_true_order, fill = ncovs)) +
geom_bar(stat = "identity", position = position_dodge(), colour="black") +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Percentage of nreps where the true subgroup order is found',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Percentage') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_y_continuous(labels=seq(0, 100, 25), breaks=seq(0,100,25)) +
expand_limits(y = c(0, 100)) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
orders
name <- paste('../figures/Figures_revised_manuscript/orders_exceptional_starting_behaviour.eps', sep = "", collapse = NULL)
ggsave(name, width = 20, height = 16, units = "cm")
data_12 <- read_excel("../data_output/results_manuscript/experiment_zero_order_subgroups_20210112_10nreps_[100, 500, 1000]_[10, 5, 2]_[10, 5, 2]_[20, 10, 5].xlsx")
# name is too long, but we have to load this dataset
#data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515_[10, [1000, 500, 100], [20, 10, 5], [10, 5, 2], [10, 5, 2], [0.5], [2], [1]].xlsx")
data_15 <- read_excel("../data_output/results_revised_manuscript/experiment_initial_starting_behaviour_20210515.xlsx")
length_new_column <- 6 * 1 * 10 * 3 * 3 * 3 * 3
data_12 <- data_12 %>%
pivot_longer(
cols = names(data_12)[9:dim(data_12)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(refs))
data_15 <- data_15 %>%
pivot_longer(
cols = names(data_15)[12:dim(data_15)[2]],
names_to = "measure",
values_to = "value") %>%
add_column(type = rep(c('rank', 'order', 'found_order'), length_new_column)) %>%
mutate(measure = gsub("_.*", "", measure)) %>%
select(-c(true_desc_length, global_model_order, start_at_order, p))
long_data <- rbind(data_12, data_15) %>%
arrange(nreps, as.integer(N), as.integer(T), as.integer(S),
as.integer(ncovs), as.integer(subgroup_orders)) %>%
mutate(true_subgroup_order = as.factor(subgroup_orders)) %>%
mutate(states = ordered(factor(S),
levels = as.character(sort(as.integer(unique(S)))))) %>%
mutate(timepoints = ordered(factor(T),
levels = as.character(sort(as.integer(unique(T)))))) %>%
mutate(ncovs = ordered(factor(ncovs),
levels = as.character(sort(as.integer(unique(ncovs)))))) %>%
mutate(N = ordered(factor(N),
levels = as.character(sort(as.integer(unique(N)))))) %>%
mutate(measure = ordered(factor(measure),
levels = c('phibic', 'phiaic', 'phiaicc', 'phiwd', 'omegatv', 'phiwrl')))
plot_data <- long_data %>%
filter(states == 5)
ranks <- plot_data %>%
filter(type == 'rank') %>%
filter(measure == 'phiaic' | measure == 'phiwrl') %>%
mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc, phiwd")) %>%
ggplot(aes(y = value, x = N)) +
geom_boxplot(aes(fill = ncovs), outlier.shape = NA) +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Boxplots of the rank of the true subgroup in the top-20',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Rank') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
ranks
name <- paste('../figures/Figures_revised_manuscript/ranks_exceptional_starting_behaviour.eps', sep = "", collapse = NULL)
ggsave(name, width = 20, height = 16, units = "cm")
orders <- plot_data %>%
filter(type == 'order') %>%
filter(measure != 'phiwrl') %>%
filter(measure != 'omegatv') %>%
filter(measure == 'phiaic' | measure == 'phiwd') %>%
mutate(measure = recode(measure, phiaic = "phiaic, phibic, phiaicc")) %>%
group_by(N, measure, true_subgroup_order, timepoints, states, ncovs) %>%
summarize(perc_true_order =
100 * sum(subgroup_orders ==
value, na.rm = TRUE) / 10) %>%
ggplot(aes(x = N, y = perc_true_order, fill = ncovs)) +
geom_bar(stat = "identity", position = position_dodge(), colour="black") +
facet_grid(measure ~ timepoints, labeller = label_both) +
labs(title = paste('Percentage of nreps where the true subgroup order is found',
sep = " ", collapse = NULL),
fill = 'Z') +
xlab('Number of data sequences') +
ylab('Percentage') +
guides(fill = guide_legend(direction = "horizontal")) +
theme(legend.position="top",
legend.justification="right",
plot.title = element_text(vjust=-4),
legend.box.margin = margin(-1,0,0,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
scale_y_continuous(labels=seq(0, 100, 25), breaks=seq(0,100,25)) +
expand_limits(y = c(0, 100)) +
scale_fill_manual(values=c("#e5f5e0", "#a1d99b", "#31a354"))
orders
name <- paste('../figures/Figures_revised_manuscript/orders_exceptional_starting_behaviour.eps', sep = "", collapse = NULL)
ggsave(name, width = 20, height = 16, units = "cm")
